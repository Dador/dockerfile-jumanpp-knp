name: build-push-jumanpp-knp

# DO NOT trigger on pull requests for security reasons
on:
  schedule:
    - cron: '0 20 */16 * *'  # Runs at 20:00 UTC on the 1 and 17th of every month.
  workflow_dispatch:

env:
  registry-user: kunlp

jobs:
  build-push:
    runs-on: self-hosted
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        base-image: ["ubuntu:18.04", "ubuntu:20.04"]  # Juman++ cannot be build on ubuntu:22.04
        target: ["jumanpp", "knp"]
        include:
          - base-image: "ubuntu:18.04"
            tag: "ubuntu18.04"
          - base-image: "ubuntu:20.04"
            tag: "ubuntu20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Generate tags
        id: generate-tags
        # jumanpp:latest is excluded because there is another alpine-based image
        run: |
          tag_prefix="${{ env.registry-user }}/${{ matrix.target }}"
          tags="${tag_prefix}:${{ matrix.tag }}"
          if [[ ${{ matrix.base-image }} == 'ubuntu:20.04' ]]; then
            tags+=",${tag_prefix}:ubuntu"
            if [[ ${{ matrix.target }} != 'jumanpp' ]]; then
              tags+=",${tag_prefix}:latest"
            fi
          fi
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.target }}.dockerfile
          platforms: linux/amd64  # or linux/amd64,linux/arm64
          build-args: BASE_IMAGE=${{ matrix.base-image }}
          push: true
          tags: ${{ steps.generate-tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-push-kwja:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: kwja.dockerfile
          platforms: linux/amd64  # or linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=ubuntu:20.04
            KWJA_VERSION=1.2.2
          push: true
          tags: ubuntu20.04,ubuntu,latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-push-jumanpp-knp:
    needs: build-push
    runs-on: self-hosted
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        base-image: ["ubuntu:20.04"]  # Juman++ cannot be build on ubuntu:22.04
        include:
          - base-image: "ubuntu:20.04"
            tag: "ubuntu20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Generate tags
        id: generate-tags
        run: |
          tag_prefix="${{ env.registry-user }}/jumanpp-knp"
          tags="${tag_prefix}:${{ matrix.tag }}"
          [[ ${{ matrix.base-image }} == 'ubuntu:20.04' ]] && tags+=",${tag_prefix}:ubuntu,${tag_prefix}:latest"
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: jumanpp-knp.dockerfile
          platforms: linux/amd64  # or linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE_JUMANPP=${{ env.registry-user }}/jumanpp:${{ matrix.tag }}
            BASE_IMAGE_KNP=${{ env.registry-user }}/knp:${{ matrix.tag }}
          push: true
          tags: ${{ steps.generate-tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-push-jumanpp-knp-kwja:
    needs: [build-push, build-push-kwja]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: jumanpp-knp-kwja.dockerfile
          platforms: linux/amd64  # or linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE_JUMANPP=${{ env.registry-user }}/jumanpp:ubuntu20.04
            BASE_IMAGE_KNP=${{ env.registry-user }}/knp:ubuntu20.04
            BASE_IMAGE_KWJA=${{ env.registry-user }}/kwja:ubuntu20.04
          push: true
          tags: ubuntu20.04,ubuntu,latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
